@page "/gioi-thieu"
@inject IntroduceServices IntroduceServices
@inject BaseServices BaseServices
@rendermode InteractiveServer


<link rel="stylesheet" type="text/css" href="assets/css/style.min.css">
<link href="css/introduce.css" rel="stylesheet" />

<main class="main">
    <P_BreadCrumb BreadCrumb="@breadCrumb" />
    <!-- Start of Page Content -->
    <div class="page-content mb-10 pb-2">
        <div class="container">
            <div class="row gutter-lg">
                <div class="main-content">
                    @if (introduces != null && introduces.Any())
                    {
                        @foreach (var item in introduces)
                        {
                            <article class="post post-list post-listing mb-md-10 mb-6 pb-2 overlay-zoom mb-4">
                                <figure class="post-media br-sm">
                                    <a onclick="window.location.href='/gioi-thieu/@item.NameSlug/@item.id';" class="cursor">
                                        <img src="@(string.IsNullOrEmpty(item.FilePath) ? "/Img_Dev/banner.png" : item.FilePath)" width="930"
                                             height="500" alt="blog" onerror="this.onerror=null;this.src='/Img_Dev/banner.png';">
                                    </a>
                                </figure>
                                <div class="post-details">
                                    <div class="post-cats text-primary">
                                        <a onclick="window.location.href='/gioi-thieu/@item.NameSlug/@item.id';" class="cursor">@item.CategoryName</a>
                                    </div>
                                    <h4 class="post-title">
                                        <a onclick="window.location.href='/gioi-thieu/@item.NameSlug/@item.id';" class="cursor">@item.Name</a>
                                    </h4>
                                    <div class="post-content no_wrap_3">
                                        <p>
                                            @item.Description
                                        </p>
                                    </div>
                                    <div class="post-meta">
                                        <a onclick="window.location.href='/gioi-thieu/@item.NameSlug/@item.id';" class="post-date cursor">@item.CreatedAt.ToString("dd-MM-yyyy")</a>
                                    </div>
                                </div>
                            </article>
                        }
                    }
                    else
                    {
                        <div class="container">
                            <div class="d-flex justify-content-center">
                                <img src="img_dev/datanull.jpg" class="img-fluid" alt="Image" />
                            </div>
                        </div>
                    }

                    @if (totalPages > 1)
                    {
                        <ul class="pagination justify-content-center">
                            <li class="prev @(currentPage == 1 ? "disabled" : "")">
                                <a href="javascript:void(0)" @onclick="PreviousPage" aria-label="Previous" tabindex="-1" aria-disabled="@(currentPage == 1)">
                                    <i class="w-icon-long-arrow-left"></i> Prev
                                </a>
                            </li>
                            @for (int i = 1; i <= totalPages; i++)
                            {
                                var pageNumber = i;  // Tạo biến tạm để lưu giá trị của trang hiện tại

                                <li class="page-item @(pageNumber == currentPage ? "active" : "")">
                                    <a class="page-link" href="javascript:void(0)" @onclick="(() => ChangePage(pageNumber))">@pageNumber</a>
                                </li>
                            }

                            <li class="next @(currentPage == totalPages ? "disabled" : "")">
                                <a href="javascript:void(0)" @onclick="NextPage" aria-label="Next">
                                    Next <i class="w-icon-long-arrow-right"></i>
                                </a>
                            </li>
                        </ul>
                    }
                </div>
                <!-- End of Main Content -->
                <aside class="sidebar right-sidebar blog-sidebar sidebar-fixed sticky-sidebar-wrapper">
                    <div class="sidebar-overlay">
                        <a href="#" class="sidebar-close">
                            <i class="close-icon"></i>
                        </a>
                    </div>
                    <a href="#" class="sidebar-toggle">
                        <i class="fas fa-chevron-left"></i>
                    </a>
                    <div class="sidebar-content">
                        <div class="sticky-sidebar">
                            <div class="widget widget-search-form">
                                <div class="widget-body">
                                    <form @onsubmit="HandleSearch" class="input-wrapper input-wrapper-inline">
                                        <input type="text" class="form-control" placeholder="Search in Blog" autocomplete="off" @bind="keyword" required>
                                        <button type="submit" class="btn btn-search">
                                            <i class="w-icon-search"></i>
                                        </button>
                                    </form>
                                </div>
                            </div>
                            <div class="widget widget-tags">
                                <h3 class="widget-title bb-no">Danh mục bài viết</h3>
                                <div class="widget-body tags">
                                    @if (cateIntroduces != null && cateIntroduces.Any())
                                    {
                                        @foreach (var item in cateIntroduces)
                                        {
                                            @if(item.Status == true)
                                            {
                                                <a onclick="window.location.href='/gioi-thieu?c=@item.Id';" class="tag position-relative cursor">
                                                    @item.Name
                                                    <span class="category_introduce_item position-absolute">@item.TotalCount</span>
                                                </a>
                                            }
                                          
                                        }
                                    }
                                </div>
                            </div>
                            <div class="widget widget-posts">
                                <h3 class="widget-title bb-no">Bài viết nổi bật</h3>
                                <div class="widget-body">
                                    <div class="owl-carousel owl-theme owl-nav-top row cols-lg-1 cols-md-3" data-owl-options="{
                                                'nav': true,
                                                'dots': false,
                                                'margin': 20,
                                                'responsive': {
                                                    '0': {
                                                        'items': 1
                                                    },
                                                    '576': {
                                                        'items': 2
                                                    },
                                                    '768': {
                                                        'items': 3
                                                    },
                                                    '992': {
                                                        'items': 1
                                                    }
                                                }
                                            }">
                                        @if (introduceIsHot != null && introduceIsHot.Any())
                                        {
                                            var postChunks = introduceIsHot.Chunk(6); // Chia bài viết thành nhóm 3
                                            foreach (var chunk in postChunks)
                                            {
                                                <div class="widget-col">
                                                    @foreach (var item in chunk)
                                                    {
                                                        <div class="post-widget mb-4">
                                                            <figure class="post-media br-sm" style="flex: 0 0 35.6% !important;max-width: unset !important">
                                                                <img src="@(string.IsNullOrEmpty(item.FilePath) ? "/Img_Dev/banner.png" : item.FilePath)" style="height: 80px"
                                                                     onerror="this.onerror=null;this.src='/Img_Dev/banner.png';" />
                                                            </figure>
                                                            <div class="post-details">
                                                                <div class="post-meta">
                                                                    <a onclick="window.location.href='/gioi-thieu/@item.NameSlug/@item.id';" class="post-date cursor">@item.CreatedAt.ToString("dd-MM-yyyy")</a>
                                                                </div>
                                                                <h4 class="post-title">
                                                                    <a onclick="window.location.href='/gioi-thieu/@item.NameSlug/@item.id';" class="cursor">@item.Name</a>
                                                                </h4>
                                                            </div>
                                                        </div>
                                                    }
                                                </div> <!-- Kết thúc slide -->
                                            }
                                        }
                                    </div>
                                </div>

                            </div>
                        </div>
                    </div>
                </aside>
            </div>
        </div>
    </div>
    <!-- End of Page Content -->
</main>


@code {
    private VM_BreadCrumb breadCrumb;
    private IEnumerable<IntroduceDto> introduces;
    private IEnumerable<IntroduceDto> introduceIsHot;
    private IEnumerable<CategoryIntroduceDto> cateIntroduces;


    private Guid? categoryId = null;
    private string? keyword = null;

    private int currentPage = 1;
    private int pageSize = 5;
    private int totalPages;
    private int totalCount;
    private int? type;

    protected override async Task OnInitializedAsync()
    {
        var uri = NavigationManager.ToAbsoluteUri(NavigationManager.Uri);
        var query = QueryHelpers.ParseQuery(uri.Query);

        if (query.TryGetValue("c", out var cId))
        {
            categoryId = new Guid(cId!);

            var categoryResponse = await IntroduceServices.GetIntroduceByCategoryId(categoryId.Value);

            if (categoryResponse != null && categoryResponse.Success)
            {
                var category = categoryResponse.Data;

                breadCrumb = new VM_BreadCrumb
                {
                    lv1Name = "Trang chủ",
                    lv1Url = "/",
                    lv2Name = category.Name,
                    lv2Url = $"/gioi-thieu?c={category.Id}",
                };
            }

        }

        if (query.TryGetValue("pageNumber", out var page))
        {
            int.TryParse(page, out currentPage);
        }

        if (query.TryGetValue("type", out var typeValue))
        {
            int.TryParse(typeValue, out var parsedType);
            type = parsedType;
        }


        await LoadListCategoryIntroduces();
        await LoadListIntroduces();
        await LoadListIntroducesIshot();
    }

    private async Task LoadListCategoryIntroduces()
    {
        cateIntroduces = await BaseServices.GetAllCategoryIntroduces();

    }
    private async Task LoadListIntroducesIshot()
    {
        introduceIsHot = await IntroduceServices.GetListIntroduceIsHotAsync();
    }

    private async Task LoadListIntroduces()
    {
        var response = await IntroduceServices.GetListIntroduceAsync(currentPage, pageSize, categoryId, keyword, type);

        if (response != null && response.Success)
        {
            introduces = response.Data.Introduces;
            totalCount = response.Data.TotalCount;
            totalPages = (int)Math.Ceiling((double)totalCount / pageSize);
        }
        else
        {
            introduces = new List<IntroduceDto>();
        }
     
    }
    private async Task ChangePage(int page)
    {
        // Chỉ cập nhật nếu page khác currentPage
        if (page != currentPage)
        {
            currentPage = page;
            await UpdateUrlAndLoadProducts();
        }
    }

    private async Task PreviousPage()
    {
        if (currentPage > 1)
        {
            currentPage--;
            await UpdateUrlAndLoadProducts();
        }
    }

    private async Task NextPage()
    {
        if (currentPage < totalPages)
        {
            currentPage++;
            await UpdateUrlAndLoadProducts();
        }
    }

    private async Task HandleSearch()
    {
        currentPage = 1;
        await UpdateUrlAndLoadProducts();

    }

    private async Task OnPageSizeChanged(ChangeEventArgs e)
    {
        pageSize = int.Parse(e.Value.ToString());

        currentPage = 1;
        await UpdateUrlAndLoadProducts();
    }

    // Cập nhật URL và gọi API để lấy danh sách sản phẩm
    private async Task UpdateUrlAndLoadProducts()
    {
        // Tạo URL mới với thông tin trang hiện tại, kích thước trang, và giá lọc
        var queryParameters = new Dictionary<string, string>
            {
                ["pageNumber"] = currentPage.ToString(),
                ["pageSize"] = pageSize.ToString()
            };

        if (!string.IsNullOrEmpty(keyword))
        {
            queryParameters["keyword"] = keyword;
        }

        if (type.HasValue)
        {
            queryParameters["type"] = type.Value.ToString();
        }

        // Tạo URL query string
        var newUrl = QueryHelpers.AddQueryString("gioi-thieu", queryParameters!);
        NavigationManager.NavigateTo(newUrl, forceLoad: false);

        // Tải lại danh sách sản phẩm
        await LoadListIntroduces();
    }
}