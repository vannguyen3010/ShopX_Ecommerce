@page "/thanh-toan"

@inject AddressServices AddressServices
@inject ShippingCost ShippingCost
@inject CartServices CartServices
@inject OrderServices OrderServices

@inject ILocalStorageService LocalStorage

<link rel="stylesheet" type="text/css" href="assets/css/style.min.css">

<link href="css/cart.css" rel="stylesheet" />

@rendermode InteractiveServer

<main class="main checkout">
    <!-- Start of Breadcrumb -->
    <nav class="breadcrumb-nav">
        <div class="container">
            <ul class="breadcrumb shop-breadcrumb bb-no">
                <li><a>Giỏ hàng</a></li>
                <li class="active"><a>Thanh toán</a></li>
                <li><a>Hoàn thành đơn hàng</a></li>
            </ul>
        </div>
    </nav>
    <!-- End of Breadcrumb -->
    <!-- Start of PageContent -->
    <div class="page-content">
        <div class="container">
            <form class="form checkout-form" action="#" method="post">
                <div class="row mb-9">
                    <div class="col-lg-7 pr-lg-4 mb-4">
                        <h3 class="title billing-title text-uppercase ls-10 pt-1 pb-3 mb-0">
                            đIA CHỈ NHẬN HÀNG
                        </h3>
                        <div class="form-group checkbox-toggle pb-2">
                            <input type="checkbox" class="custom-checkbox" id="shipping-toggle"
                                   name="shipping-toggle">
                            <label for="shipping-toggle">Thêm đia chỉ mới</label>
                        </div>
                        <div class="checkbox-content">
                            <div class="form-group">
                                <label> Tỉnh *</label>
                                <div class="select-box">
                                    <select name="country" class="form-control form-control-md" @onchange="OnProvinceChanged">
                                        <option value="default" selected="selected">
                                            Chọn tỉnh
                                        </option>
                                        @if (provinces != null && provinces.Any())
                                        {
                                            @foreach (var item in provinces)
                                            {
                                                <option value="@item.Code">@item.Name</option>
                                            }
                                        }

                                    </select>
                                </div>
                            </div>
                            <div class="row gutter-sm">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>Thành phố *</label>
                                        <div class="select-box">
                                            <select name="country" class="form-control form-control-md" @onchange="OnDistrictChanged">
                                                <option value="default" selected="selected">Chọn thành phố</option>
                                                @if (districts != null && districts.Any())
                                                {
                                                    @foreach (var item in districts)
                                                    {

                                                        <option value="@item.Code">@item.Name</option>
                                                    }
                                                }
                                            </select>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label>Số điện thoại *</label>
                                        <input type="text" @bind="newAddress.PhoneNumber" class="form-control form-control-md" name="number" maxlength="10" required>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>Phường, xã *</label>
                                        <div class="select-box">
                                            <select name="country" class="form-control form-control-md" @bind="newAddress.WardCode">
                                                <option value="default" selected="selected">Chọn phường, xã</option>
                                                @if (wards != null && wards.Any())
                                                {
                                                    @foreach (var item in wards)
                                                    {
                                                        <option value="@item.Code">@item.Name</option>
                                                    }
                                                }
                                            </select>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label>Họ và tên *</label>
                                        <input type="text" @bind="newAddress.UserName" class="form-control form-control-md" name="text">
                                    </div>
                                </div>
                            </div>
                            <div class="form-group mt-3">
                                <label for="order-notes">Địa chỉ cụ thể *</label>
                                <textarea class="form-control mb-0" id="order-notes" name="order-notes" cols="30"
                                          rows="4"
                                          placeholder="Nhập địa chỉ cụ thể" @bind="@newAddress.StreetAddress"></textarea>
                            </div>

                            <div class="row gutter-sm">
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label>Nơi ở *</label>
                                        <div class="select-box">
                                            <select name="country" class="form-control form-control-md" @bind="newAddress.AddressType">
                                                <option value="default" selected="selected">--------</option>
                                                <option value="0">Nhà riêng</option>
                                                <option value="1">Văn phòng</option>
                                            </select>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <button type="submit" class="btn button btn-rounded btn-coupon mb-2" name="apply_coupon" value="Apply coupon" @onclick="SubmitAddress">Thêm địa chỉ</button>
                            @if (!string.IsNullOrEmpty(message))
                            {
                                <div class="alert alert-warning mt-4">@message</div>
                            }
                        </div>
                        <div class="check_box">
                            <div class="checkout_title d-flex align-items-center">

                                <h4> <i class="fas fa-map-marker-alt me-2"></i> Địa chỉ</h4>
                            </div>

                            <div class="checkout_detail" id="style-1">
                                <div class="row g-4">
                                    @if (addresses != null && addresses.Any())
                                    {
                                        @foreach (var item in addresses)
                                        {
                                            var isChecked = item.Id == selectedAddressId;

                                            <div class="col-xxl-6 col-lg-6 col-md-6">
                                                <div class="delivery_address_box">
                                                    <div class="d-flex position-relative">
                                                        <div class="form-check">
                                                            <input class="form-check-input" type="radio" name="jack" @onchange="() => OnAddressSelected(item.Id)" checked="@isChecked">
                                                        </div>
                                                        <div class="label" for="@item.Id">
                                                            @if (item.AddressType == 0)
                                                            {
                                                                <label>Nhà riêng</label>
                                                            }
                                                            else if (item.AddressType == 1)
                                                            {
                                                                <label>Văn phòng</label>
                                                            }
                                                        </div>
                                                        <ul class="delivery_address_detail d-flex">
                                                            <li>
                                                                <h4 class="fw-500">
                                                                    @item.UserName
                                                                </h4>
                                                            </li>
                                                            <li>
                                                                <p class="text_content">
                                                                    <span class="text_title">
                                                                        Đia chỉ
                                                                        :
                                                                    </span>@item.ProvinceName, @item.DistrictName, @item.WardName
                                                                </p>
                                                            </li>
                                                            <li>
                                                                <h6 class="text_content mb-0">
                                                                    <span class="text_title">
                                                                        Số điện thoại
                                                                        :
                                                                    </span> @item.PhoneNumber
                                                                </h6>
                                                            </li>
                                                        </ul>
                                                    </div>
                                                </div>

                                            </div>
                                        }
                                    }
                                </div>
                            </div>


                        </div>
                        <div class="check_box mt-3">
                            <div class="checkout_title d-flex align-items-center">

                                <h4> <i class="fas fa-shipping-fast me-2"></i> Phí Vận chuyển</h4>
                            </div>

                            <div class="checkout_detail" id="style-1">
                                @if (shipCost != null)
                                {
                                    <div class="col-xxl-6 col-lg-6 col-md-6">
                                        <div class="delivery_address_box">
                                            <div class="d-flex position-relative">
                                                <div class="form-check">
                                                    <input class="form-check-input" type="radio" name="shippingCost" id="shippingCost" checked="true">
                                                    <label class="form-check-label" for="shippingCost">
                                                        Phí vận chuyển
                                                    </label>
                                                </div>
                                                <div class="label" style="background: #ee4d2d"><label>@shipCost.Cost.ToString("N0")  <span class="currency-symbol">đ</span></label></div>
                                            </div>
                                        </div>

                                    </div>
                                }

                            </div>
                        </div>

                        <div class="row gutter-sm">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label>Đia chỉ Email *</label>
                                    <input type="email" @bind="orderModel.Email" class="form-control form-control-md" name="number" required>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label>Chọn Ngân hàng thanh toán *</label>
                                    <div class="select-box">
                                        @if (paymentMethods != null && paymentMethods.Any())
                                        {
                                            <select @onchange="OnPaymentMethodSelected" name="country" class="form-control form-control-md">
                                                <option value="default" selected="selected">--------</option>
                                                @foreach (var item in paymentMethods)
                                                {
                                                    <option value="@item.Id">@item.BankName</option>
                                                }
                                            </select>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="form-group mb-7">
                            <label for="order-notes">Ghi chú đặt hàng</label>
                            <textarea @bind="orderModel.Note" class="form-control mb-0" id="order-notes" name="order-notes" cols="30"
                                      rows="4"
                                      placeholder="Nhập ghi chú"></textarea>
                        </div>
                    </div>
                    <div class="col-lg-5 mb-4 sticky-sidebar-wrapper">
                        <div class="order-summary-wrapper sticky-sidebar">
                            <h3 class="title text-uppercase ls-10">SẢN PHẨM CỦA BẠN</h3>
                            <div class="order-summary">
                                <table class="order-table">
                                    <tbody>
                                        @if (carts != null && carts.Any())
                                        {
                                            @foreach (var item in carts)
                                            {
                                                <tr class="bb-no">
                                                    <td class="product-name d-flex align-items-center">
                                                        <img src="@(string.IsNullOrEmpty(item.ImageFilePath) ? "/Img_Dev/banner.png" : item.ImageFilePath)" alt="product" class="product-image img-fluid product_image_custom" onerror="this.onerror=null;this.src='/Img_Dev/banner.png';">
                                                        <span class="no_wrap_2 product_checkout_item">@item.Name</span>
                                                        <i class="fas fa-times" style="margin-left: 10px;"></i>
                                                        <span class="product-quantity" style="margin-left: 10px;">@item.Quantity</span>
                                                    </td>
                                                    <td class="product-total product_checkout_price test_price">@((item.Price * item.Quantity - item.Discount * item.Quantity).ToString("N0")) <span class="currency-symbol test_price">đ</span></td>
                                                </tr>
                                            }
                                        }
                                        <tr class="cart-subtotal bb-no">
                                            <td>
                                                <i class="fas fa-dollar-sign me-2"></i>
                                                <b>Tổng tiền sản phẩm</b>
                                            </td>
                                            <td>
                                                <b class="test_price">@totalPrice.ToString("N0") <span class="currency-symbol test_price">đ</span></b>
                                            </td>
                                        </tr>
                                        @if (shipCost != null)
                                        {
                                            <tr class="cart-subtotal bb-no">
                                                <td>
                                                    <i class="fas fa-shipping-fast me-2"></i>
                                                    <b>Phí vận chuyển</b>
                                                </td>
                                                <td>
                                                    <b class="test_price">@shipCost.Cost.ToString("N0") <span class="currency-symbol test_price">đ</span></b>
                                                </td>
                                            </tr>
                                            <tr class="cart-subtotal bb-no">
                                                <td>
                                                    <i class="fas fa-coins" style="margin-right: 5px;"></i>
                                                    <b>Thành tiền</b>
                                                </td>
                                                <td style="width: 26%;">
                                                    <b class="test_price">@((totalPrice + shipCost.Cost).ToString("N0")) <span class="currency-symbol test_price">đ</span></b>
                                                </td>
                                            </tr>
                                        }

                                    </tbody>
                                </table>

                                <div class="form-group place-order pt-6">
                                    <button class="btn btn-dark btn-block btn-rounded" @onclick="HandleCreateOrder">Đặt hàng</button>
                                    @if (message != null)
                                    {
                                        <div class="alert alert-danger">
                                            @message
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>
    <!-- End of PageContent -->
</main>

@code {
    private IEnumerable<CartItemDto> carts = new List<CartItemDto>();
    private IEnumerable<AddressDto> addresses;
    private IEnumerable<PaymentMethodDto> paymentMethods;
    private List<Province> provinces = new();
    private List<District> districts = new();
    private List<Ward> wards = new();
    private ShippingCostDto shipCost;

    private CreateOrderDto orderModel = new CreateOrderDto();
    private CreateAddressDto newAddress = new CreateAddressDto();

    private string selectedProvinceCode;
    private string selectedDistrictCode;
    private string selectedWardCode;

    private Guid selectedAddressId;
    private decimal shippingCost;
    private decimal totalPrice;

    private bool isLoadingShippingCost = false;
    private string errorMessage;
    private string message;
    private bool isRendered = false;

    protected override async Task OnInitializedAsync()
    {
        await GetListAddress();
        await GetListProvinces();
        await GetAllPaymentMethods();
    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && !isRendered)
        {
            isRendered = false; // Đảm bảo LoadListCarts chỉ gọi một lần khi render
            await LoadListCarts();
        }
    }

    private async Task LoadListCarts()
    {
        var userId = await LocalStorage.GetItemAsync<string>("userId");
        if (string.IsNullOrEmpty(userId))
        {
            message = "Vui lòng đăng nhập để bình luận.";
            return;
        }

        var response = await CartServices.GetCartAsync(userId);
        if (response != null && response.Success)
        {
            carts = response.Data.Items;
            totalPrice = response.Data.TotalPrice;
        }
        else
        {
            carts = new List<CartItemDto>();
            message = response?.Message ?? "Lỗi khi lấy giỏ hàng.";
        }
        StateHasChanged();
    }

    private async Task GetListAddress()
    {
        addresses = await AddressServices.GetListAddressAsync();

        if (addresses != null && addresses.Any())
        {
            var firstAddress = addresses.First();

            selectedAddressId = firstAddress.Id;

            orderModel.AddressId = firstAddress.Id;

            await GetShippingCostForAddress(firstAddress.Id); // Lấy phí vận chuyển cho địa chỉ đầu tiên
        }
    }

    private async Task OnAddressSelected(Guid addressId)
    {
        selectedAddressId = addressId; // Cập nhật ID địa chỉ đã chọn
        
        orderModel.AddressId = addressId;
        await GetShippingCostForAddress(addressId); // Gọi hàm lấy phí vận chuyển
    }

    private async Task GetShippingCostForAddress(Guid addressId)
    {
        try
        {
            isLoadingShippingCost = true;

            var response = await ShippingCost.GetShippingCostByAddressIdAsync(addressId);

            if (response.Success)
            {
                shipCost = response.Data;
                errorMessage = null;
            }
            else
            {
                errorMessage = response.Message;
                shippingCost = 0;
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Lỗi khi gọi API: {ex.Message}";
        }
        finally
        {
            isLoadingShippingCost = false; // Tắt loading khi hoàn tất
        }
    }

    private async Task GetListProvinces()
    {
        provinces = await AddressServices.GetAllProvincesAsync();
    }

    private async Task OnProvinceChanged(ChangeEventArgs e)
    {
        selectedProvinceCode = e.Value.ToString();
        districts = await AddressServices.GetAllDistrictsAsync(selectedProvinceCode);
        wards.Clear();
    }

    private async Task OnDistrictChanged(ChangeEventArgs e)
    {
        selectedDistrictCode = e.Value.ToString();
        wards = await AddressServices.GetAllWardsAsync(selectedDistrictCode);
    }

    private async Task SubmitAddress()
    {
        newAddress.ProvinceCode = selectedProvinceCode;
        newAddress.DistrictCode = selectedDistrictCode;

        var result = await AddressServices.CreateAddressAsync(newAddress);

        if (result)
        {
            message = "Địa chỉ đã được tạo thành công";
            await GetListAddress();
        }
        else
        {
            message = "Tạo địa chỉ thất bại";
        }
    }

    private async Task GetAllPaymentMethods()
    {
        var response = await OrderServices.GetAllPaymentMethodsAsync();
        if (response.Success)
        {
            paymentMethods = response.Data;
        }
    }

    private void OnPaymentMethodSelected(ChangeEventArgs e)
    {
        if (Guid.TryParse(e.Value.ToString(), out var paymentMethodId))
        {
            orderModel.PaymentMethodId = paymentMethodId;
        }
    }

    private async Task HandleCreateOrder()
    {
        var userId = await LocalStorage.GetItemAsync<string>("userId");

        if (string.IsNullOrEmpty(userId))
        {
            message = "Vui lòng đăng nhập để đặt hàng.";
            return;
        }
        orderModel.UserId = userId;

        var orderResult = await OrderServices.CreateOrderAsync(orderModel);

        if (orderResult.Success && orderResult.Data != null) 
        {
            message = "Đặt hàng thành công!";

            var orderId = orderResult.Data.Id;

            NavigationManager.NavigateTo($"/order-success/{orderId}", forceLoad: true);
        }
        else
        {
            message = "Đặt hàng thất bại";
        }

    }
}