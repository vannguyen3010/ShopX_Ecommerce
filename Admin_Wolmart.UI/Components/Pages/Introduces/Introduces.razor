@page "/quan-ly-bai-viet"

@inject IntroduceServices _introduceServices

@rendermode InteractiveServer

<div class="page-body">
    <div class="container-fluid">
        <div class="row">
            <div class="col-sm-12">
                <div class="card card-table">
                    <div class="card-body">
                        <div class="title-header option-title d-sm-flex d-block">
                            <h5>Danh sách Bài viết</h5>
                            <div class="right-options">
                                <ul>
                                    <li>
                                        <a class="btn btn-solid" href="add-new-product.html">Thêm bài viết</a>
                                    </li>
                                </ul>
                            </div>
                        </div>
                        <div>
                            <div class="table-responsive">
                                <table class="table all-package theme-table table-product" id="table_id">
                                    <thead>
                                        <tr>
                                            <th>Ảnh</th>
                                            <th>Tên bài viết</th>
                                            <th>Danh mục</th>
                                            <th>Ngày đăng</th>
                                            <th>Trang thái</th>
                                            <th>Hành động</th>
                                        </tr>
                                    </thead>

                                    <tbody>
                                        @if (listIntroduces != null && listIntroduces.Any())
                                        {
                                            @foreach (var item in listIntroduces)
                                            {
                                                <tr>
                                                    <td class="@(item.Status ? "" : "table_row_disabled")">
                                                        <div class="table-image">
                                                            <img src="@(string.IsNullOrEmpty(item.FilePath) ? "/Img_Dev/banner.png" : item.FilePath)" class="img-fluid"
                                                                 alt="image" onerror="this.onerror=null;this.src='/Img_Dev/banner.png';">
                                                        </div>
                                                    </td>

                                                    <td class="@(item.Status ? "" : "table_row_disabled")">@item.Name</td>

                                                    <td class="@(item.Status ? "" : "table_row_disabled")">@item.CategoryName</td>

                                                    <td class="@(item.Status ? "" : "table_row_disabled")">@item.CreatedAt.ToString("dd-MM-yyyy")</td>

                                                    @if(item.Status == true)
                                                    {
                                                        <td>
                                                            <label class="switch">
                                                                <input type="checkbox" checked @onchange="@(e => UpdateStatus(item.id, false))">
                                                                <span class="slider round"></span>
                                                            </label>
                                                        </td>
                                                    }
                                                    else
                                                    {
                                                        <td>
                                                            <label class="switch">
                                                                <input type="checkbox" @onchange="@(e => UpdateStatus(item.id, true))">
                                                                <span class="slider round"></span>
                                                            </label>
                                                        </td>
                                                    }


                                                    <td class="@(item.Status ? "" : "table_row_disabled")">
                                                        <ul>
                                                            <li>
                                                                <a href="order-detail.html">
                                                                    <i class="ri-eye-line"></i>
                                                                </a>
                                                            </li>

                                                            <li>
                                                                <a href="javascript:void(0)">
                                                                    <i class="ri-pencil-line"></i>
                                                                </a>
                                                            </li>

                                                            <li>
                                                                <a href="javascript:void(0)" data-bs-toggle="modal"
                                                                   data-bs-target="#exampleModalToggle">
                                                                    <i class="ri-delete-bin-line"></i>
                                                                </a>
                                                            </li>
                                                        </ul>
                                                    </td>
                                                </tr>
                                            }
                                        }
                                       
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- Container-fluid Ends-->

    <div class="container-fluid">
        <!-- footer start-->
        <footer class="footer">
            <div class="row">
                <div class="col-md-12 footer-copyright text-center">
                    <p class="mb-0">Copyright 2022 © Fastkart theme by pixelstrap</p>
                </div>
            </div>
        </footer>
    </div>
</div>

@code{
    private IEnumerable<IntroduceDto> listIntroduces;
    private IntroduceDto introduces;

    private string? keyword = null;
    private int currentPage = 1;
    private int pageSize = 10;
    private int totalPages;
    private int totalCount;

    protected override async Task OnInitializedAsync()
    {
        var uri = NavigationManager.ToAbsoluteUri(NavigationManager.Uri);
        var query = QueryHelpers.ParseQuery(uri.Query);

        if (query.TryGetValue("pageNumber", out var page))
        {
            int.TryParse(page, out currentPage);
        }

        await LoadListIntroduces();
    }

    private async Task UpdateStatus(Guid id, bool status)
    {
        bool isSuccess = await _introduceServices.UpdateIntroduceStatusAsync(id, status);

        if (isSuccess)
        {
            await LoadListIntroduces();
        }
    }


    private async Task LoadListIntroduces()
    {
        var response = await _introduceServices.GetListIntroduceAsync(currentPage, pageSize, keyword);

        if (response != null && response.Success)
        {
            listIntroduces = response.Data.Introduces;
            totalCount = response.Data.TotalCount;
            totalPages = (int)Math.Ceiling((double)totalCount / pageSize);
        }
        else
        {
            listIntroduces = new List<IntroduceDto>();
        }
    }


}