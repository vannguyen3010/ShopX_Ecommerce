@page "/add-introduces"
@inject CateIntroduceServices _cateIntroduceServices
@inject IntroduceServices _introduceServices


@rendermode InteractiveServer

<div class="page-body">
    <div class="container-fluid">
        <div class="row">
            <div class="col-12">
                <div class="row">
                    <div class="col-sm-8 m-auto">
                        <div class="card">
                            <div class="card-body">
                                <div class="card-header-2">
                                    <h5>Thêm bài viết</h5>
                                </div>

                                <form class="theme-form theme-form-2 mega-form" @onsubmit="HandleSubmit">
                                    <div class="mb-4 row align-items-center">
                                        <label class="form-label-title col-sm-3 mb-0">
                                            Tên bài viết
                                        </label>
                                        <div class="col-sm-9">
                                            <input class="form-control" type="text" @bind="introduce.Name"
                                                   placeholder="Nhập tên" >
                                        </div>
                                    </div>

                                    <div class="mb-4 row align-items-center">
                                        <label class="col-sm-3 col-form-label form-label-title">
                                            Danh mục bài viết
                                        </label>
                                        <div class="col-sm-9">
                                            <select class="js-example-basic-single w-100" name="state" @bind="introduce.CategoryId">
                                                @if (cateIntroduces != null && cateIntroduces.Any())
                                                {
                                                    <option selected disabled>Chọn danh mục</option>
                                                    @foreach (var item in cateIntroduces)
                                                    {
                                                        <option value="@item.Id">@item.Name</option>
                                                    }
                                                }
                                            </select>
                                        </div>
                                    </div>

                                    <div class="mb-4 row align-items-center">
                                        <label class="col-sm-3 col-form-label form-label-title">Nổi bật</label>
                                        <div class="col-sm-9">
                                            <select class="js-example-basic-single w-100" name="state" @bind="introduce.IsHot">
                                                <option disabled selected>Chọn nổi bật</option>
                                                <option value="true">Có</option>
                                                <option value="false">Không</option>
                                            </select>
                                        </div>
                                    </div>
                                    <div class="mb-4 row">
                                        <label class="form-label-title col-sm-3 mb-0">
                                            Mổ tả
                                        </label>
                                        <div class="col-sm-9">
                                            <textarea class="form-control" @bind="introduce.Description" rows="3"></textarea>
                                        </div>
                                    </div>

                                    <div class="mb-4 row align-items-center">
                                        <label class="col-sm-3 col-form-label form-label-title">Ảnh</label>
                                        <div class="table-image" style="width: 200px;">
                                            <img src="@imagePreviewUrl" class="img-fluid" alt="image" onerror="this.onerror=null;this.src='/img_dev/datanull.png';">
                                        </div>
                                    </div>

                                    <div class="mb-4 row align-items-center">
                                        <label class="col-3 col-form-label form-label-title"></label>
                                        <InputFile class="form-control form-choose" OnChange="OnFileSelected" />
                                    </div>


                                    <div class="modal-footer">
                                        <button type="submit" class="btn btn-primary">Thêm</button>
                                    </div>
                                </form>
                            </div>
                        </div>
                      
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


@code{
    private IEnumerable<CategoryIntroduceDto> cateIntroduces;
    private CreateIntroduceDto introduce = new CreateIntroduceDto();

    private string imagePreviewUrl;

    private string? keyword = null;
    private int currentPage = 1;
    private int pageSize = 10;

    protected override async Task OnInitializedAsync()
    {
        await LoadListCategoriesIntroduces();
    }

    private async Task LoadListCategoriesIntroduces()
    {
        var response = await _cateIntroduceServices.GetAllCategoryPaginationAsync(currentPage, pageSize, keyword);

        if (response != null && response.Success)
        {
            cateIntroduces = response.Data.categories;
        }
        else
        {
            cateIntroduces = new List<CategoryIntroduceDto>();
        }

    }

    // Xử lý chọn file và hiển thị preview ảnh
    private async Task OnFileSelected(InputFileChangeEventArgs e)
    {
        var files = e.GetMultipleFiles(); // Lấy danh sách file đã chọn

        foreach (var file in files)
        {
            // Lấy tên file và kích thước file
            var fileName = file.Name;

            // Hiển thị file (nếu bạn muốn preview ảnh)
            var buffer = new byte[file.Size];
            await file.OpenReadStream().ReadAsync(buffer);
            var imageBase64 = Convert.ToBase64String(buffer);
            // Gán chuỗi base64 vào một biến để hiển thị trong img tag
            imagePreviewUrl = $"data:image/png;base64,{imageBase64}";

            // Xác định ContentDisposition và ContentType
            var contentDisposition = $"form-data; name=\"file\"; filename=\"{fileName}\"";
            var contentType = file.ContentType;

            // Chuyển đổi IBrowserFile thành IFormFile
            using (var stream = new MemoryStream(buffer))
            {
                introduce.File = new FormFile(stream, 0, stream.Length, "file", fileName)
                {
                    Headers = new HeaderDictionary(),
                    ContentDisposition = contentDisposition,
                    ContentType = contentType
                };
            }
        }
    }

    private async Task<string> GetImagePreviewUrl(IBrowserFile file)
    {
        var resizedFile = await file.RequestImageFileAsync("image/png", 200, 200);
        var buffer = new byte[resizedFile.Size];
        await resizedFile.OpenReadStream().ReadAsync(buffer);
        return $"data:image/png;base64,{Convert.ToBase64String(buffer)}";
    }

    private async Task HandleSubmit()
    {
        if (string.IsNullOrWhiteSpace(introduce.Name) || introduce.File == null)
        {
            return;
        }

        var success = await _introduceServices.CreateIntroduceAsync(introduce);

        if (success)
        {
            introduce = new CreateIntroduceDto();
            imagePreviewUrl = null;
        }
    }
}