@page "/them-banner"
@inject BannerServices _bannerServices
@rendermode InteractiveServer

<div class="page-body">
    <div class="container-fluid">
        <div class="row">
            <div class="col-12">
                <div class="row">
                    <div class="col-sm-8 m-auto">
                        <div class="card">
                            <div class="card-body">
                                <div class="card-header-2">
                                    <h5>Thêm Banner</h5>
                                </div>

                                <form class="theme-form theme-form-2 mega-form" @onsubmit="HandleSubmit">
                                    <div class="mb-4 row align-items-center">
                                        <label class="form-label-title col-sm-3 mb-0">
                                            Tiêu đề
                                        </label>
                                        <div class="col-sm-9">
                                            <input class="form-control" type="text"
                                                   @bind="banner.Title" placeholder="nhập tiêu đề">
                                        </div>
                                    </div>

                                    <div class="mb-4 row align-items-center">
                                        <label class="col-sm-3 col-form-label form-label-title">
                                            Mô tả
                                        </label>
                                        <div class="col-sm-9">
                                            <input class="form-control" type="text" @bind="banner.Desc"
                                                   placeholder="Nhập mô tả">
                                        </div>
                                    </div>
                                    <div class="mb-4 row align-items-center">
                                        <label class="col-sm-3 col-form-label form-label-title">Danh mục</label>
                                        <div class="col-sm-9">
                                            <select class="js-example-basic-single w-100" @bind="banner.Position">
                                                <option value="@(BannerPosition.Top)">Top</option>
                                                <option value="@(BannerPosition.Right)">Right</option>
                                                <option value="@(BannerPosition.Left)">Left</option>
                                                <option value="@(BannerPosition.Bottom)">Bottom</option>
                                            </select>
                                        </div>
                                    </div>

                                    <div class="mb-4 row align-items-center">
                                        <label class="col-sm-3 col-form-label form-label-title">Ảnh nền</label>
                                        <div class="table-image" style="width: 200px;">
                                            <img src="@imagePreviewUrl" class="img-fluid" alt="image" onerror="this.onerror=null;this.src='/Img_Dev/banner.png';" />
                                        </div>
                                    </div>

                                    <div class="mb-4 row align-items-center">
                                        <label class="col-3 col-form-label form-label-title"></label>
                                        <InputFile class="table-image col-6" accept=".jpg,.jpeg,.png" OnChange="OnFileSelected" />
                                    </div>

                                    <div class="mb-4 row align-items-center">
                                        <label class="col-sm-3 col-form-label form-label-title">Ảnh</label>
                                        <div class="table-image" style="width: 200px;">
                                            <img src="@imageSecondPreviewUrl" class="img-fluid" alt="image" onerror="this.onerror=null;this.src='/Img_Dev/banner.png';" />
                                        </div>
                                    </div>

                                    <div class="mb-4 row align-items-center">
                                        <label class="col-3 col-form-label form-label-title"></label>
                                        <InputFile class="table-image col-6" accept=".jpg,.jpeg,.png" OnChange="OnFileSecondSelected" />
                                    </div>

                                    <div class="modal-footer">
                                        @if (ShowLoadingButton)
                                        {
                                            <ButtonLoad></ButtonLoad>
                                        }
                                        else
                                        {
                                            <button type="submit" class="btn btn-primary buttonload">Thêm</button>
                                        }
                                      
                                    </div>
                                    @if (!string.IsNullOrEmpty(message))
                                    {
                                        <div class="alert alert-success mt-4">@message</div>
                                    }

                                </form>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code{
    [CascadingParameter] 
    public Task<AuthenticationState>? AuthenticationState { get; set; }

    private CreateBannerDto banner = new CreateBannerDto();

    private string imagePreviewUrl = "/img_dev/datanull.png";
    private string imageSecondPreviewUrl = "/img_dev/datanull.png";

    private IBrowserFile? selectedFile;
    private IBrowserFile? selectedSecondFile;

    private string message;
    public bool ShowLoadingButton { get; set; } = false;

    protected async override Task OnInitializedAsync()
    {
        await CheckUserAuthentication();
    }
    private async Task CheckUserAuthentication()
    {
        var user = (await AuthenticationState!).User;
        bool isUserAuthenticated = user.Identity!.IsAuthenticated;
        if (!isUserAuthenticated)
            NavigationManager.NavigateTo("/account/login");
    }

    private async Task HandleSubmit()
    {
        ShowLoadingButton = true;
        var success = await _bannerServices.CreateBannerAsync(banner, selectedFile, selectedSecondFile);
        if (success)
        {
            banner = new CreateBannerDto();
            imagePreviewUrl = "/img_dev/datanull.png";
            imageSecondPreviewUrl = "/img_dev/datanull.png";
            message = "Tạo thành công";
        }
        else
        {
            message = "Tạo bài viết thất bại";
        }

        await Task.Delay(1000);
        ShowLoadingButton = false;
    }

    private async Task OnFileSelected(InputFileChangeEventArgs e)
    {
        selectedFile = e.File;
        var buffer = new byte[selectedFile.Size];
        await selectedFile.OpenReadStream(10485760).ReadAsync(buffer);
        imagePreviewUrl = $"data:{selectedFile.ContentType};base64,{Convert.ToBase64String(buffer)}";
    }

    private async Task OnFileSecondSelected(InputFileChangeEventArgs e)
    {
        selectedSecondFile = e.File;
        var buffer = new byte[selectedSecondFile.Size];
        await selectedSecondFile.OpenReadStream(10485760).ReadAsync(buffer);
        imageSecondPreviewUrl = $"data:{selectedSecondFile.ContentType};base64,{Convert.ToBase64String(buffer)}";
    }
}