@page "/shippingCost"

<link href="/css/all_page.css" rel="stylesheet" />

@rendermode InteractiveServer

<div class="page-body">
    <div class="container-fluid">
        <div class="row">
            <div class="col-sm-12">
                <div class="card card-table">
                    <div class="card-body">
                        <div class="title-header option-title" style="font-size: unset!important">
                            <h5>Danh sách phí vận chuyển</h5>
                            <div class="right-options">
                                <form @onsubmit="HandleSearch" class="search_box">
                                    <input type="text" class="search_input" placeholder="Tìm kiếm..." @bind="keyword">
                                    <button type="submit" class="search_button">
                                        <i class="fa-solid fa-magnifying-glass fs-6"></i>
                                    </button>
                                </form>
                            </div>
                        </div>
                        <div>
                            <div class="table-responsive">
                                <table class="table all-package coupon-list-table table-hover theme-table"
                                       id="table_id">
                                    <thead>
                                        <tr>
                                            <th>Mã code</th>
                                            <th>Tỉnh</th>
                                            <th>Phí vận chuyển</th>
                                            <th>Trạng thái</th>
                                            <th>Hành động</th>
                                        </tr>
                                    </thead>

                                    <tbody>
                                        @if (listShippingCost != null && listShippingCost.Any())
                                        {
                                            foreach (var item in listShippingCost)
                                            {
                                                <tr>
                                                    <td class="@(item.Status ? "" : "table_row_disabled")">@item.ProvinceCode</td>

                                                    <td class="menu-status @(item.Status ? "" : "table_row_disabled")">
                                                        <span class="danger">@item.ProvinceName</span>
                                                    </td>

                                                    <td class="@(item.Status ? "" : "table_row_disabled")">@item.Cost.ToString("N0") <span class="currency-symbol">đ</span></td>

                                                    @if (item.Status == true)
                                                    {
                                                        <td>
                                                            <label class="switch">
                                                                <input type="checkbox" checked @onchange="@((ChangeEventArgs e) => UpdateStatus(item.Id, false))">
                                                                <span class="slider round"></span>
                                                            </label>
                                                        </td>
                                                    }
                                                    else
                                                    {
                                                        <td>
                                                            <label class="switch">
                                                                <input type="checkbox" @onchange="@((ChangeEventArgs e) => UpdateStatus(item.Id, true))">
                                                                <span class="slider round"></span>
                                                            </label>
                                                        </td>
                                                    }

                                                    <td>
                                                        <ul>
                                                            <li>
                                                                <a href="javascript:void(0)" @onclick="() => GetShippingCostOrUpdate(item.Id)">
                                                                    <i class="ri-pencil-line"></i>
                                                                </a>
                                                            </li>

                                                        </ul>
                                                    </td>
                                                </tr>
                                            }
                                        }

                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>

                    @if (totalPages > 1)
                    {
                        <nav class="custome-pagination mt-5">
                            <ul class="pagination justify-content-center custom_pagination_ul">
                                <li class="page-item custom_lef @(currentPage == 1 ? "disabled" : "")">
                                    <a class="page-link" href="javascript:void(0)" @onclick="PreviousPage" aria-label="Previous" tabindex="-1" aria-disabled="@(currentPage == 1)">
                                        <i class="fa-solid fa-angles-left"></i>
                                    </a>
                                </li>
                                @for (int i = 1; i <= totalPages; i++)
                                {
                                    var pageNumber = i;

                                    <li class="page-item custom_left_item @(pageNumber == currentPage ? "active" : "")" style="z-index: 0">
                                        <a class="page-link" href="javascript:void(0)" @onclick="(() => ChangePage(pageNumber))">@pageNumber</a>
                                    </li>
                                }

                                <li class="page-item custom_left @(currentPage == totalPages ? "disabled" : "")">
                                    <a class="page-link" href="javascript:void(0)" @onclick="NextPage" aria-label="Next">
                                        <i class="fa-solid fa-angles-right"></i>
                                    </a>
                                </li>
                            </ul>
                        </nav>

                    }

                </div>
            </div>
        </div>
    </div>
</div>


@code {
    private IEnumerable<ShippingCostDto> listShippingCost;

    private string? keyword = null;
    private int currentPage = 1;
    private int pageSize = 20;
    private int totalPages;
    private int totalCount;

    protected override async Task OnInitializedAsync()
    {
        var uri = NavigationManager.ToAbsoluteUri(NavigationManager.Uri);
        var query = QueryHelpers.ParseQuery(uri.Query);

        if (query.TryGetValue("pageNumber", out var page))
        {
            int.TryParse(page, out currentPage);
        }

        if (query.TryGetValue("keyword", out var searchKeyword))
        {
            keyword = searchKeyword;
        }

        await LoadListShippingCosts();
    }

    private async Task LoadListShippingCosts()
    {
        var response = await _shippingCostServices.GetListShippingCostAsync(currentPage, pageSize, keyword);

        if (response != null && response.Success)
        {
            listShippingCost = response.Data.ShippingCosts;
            totalCount = response.Data.TotalCount;
            totalPages = (int)Math.Ceiling((double)totalCount / pageSize);
        }
        else
        {
            listShippingCost = new List<ShippingCostDto>();
        }

    }

    private async Task ChangePage(int page)
    {
        if (page != currentPage)
        {
            currentPage = page;
            await UpdateUrlAndLoadShippingCost();
        }
    }

    private async Task PreviousPage()
    {
        if (currentPage > 1)
        {
            currentPage--;
            await UpdateUrlAndLoadShippingCost();
        }
    }

    private async Task NextPage()
    {
        if (currentPage < totalPages)
        {
            currentPage++;
            await UpdateUrlAndLoadShippingCost();
        }
    }

    private async Task OnPageSizeChanged(ChangeEventArgs e)
    {
        pageSize = int.Parse(e.Value.ToString());

        currentPage = 1;
        await UpdateUrlAndLoadShippingCost();
    }

    private async Task HandleSearch()
    {
        currentPage = 1;
        await UpdateUrlAndLoadShippingCost();

    }

    private async Task UpdateStatus(Guid id, bool status)
    {
        bool isSuccess = await _shippingCostServices.UpdateShippingCostStatusAsync(id, status);

        if (isSuccess)
        {
            await LoadListShippingCosts();
        }
    }

    private async Task GetShippingCostOrUpdate(Guid id)
    {
        NavigationManager.NavigateTo($"/update-shippingCost/{id}", forceLoad: true);
    }


    private async Task UpdateUrlAndLoadShippingCost()
    {
        var queryParameters = new Dictionary<string, string>
            {
                ["pageNumber"] = currentPage.ToString(),
                ["pageSize"] = pageSize.ToString()
            };

        if (!string.IsNullOrEmpty(keyword))
        {
            queryParameters["keyword"] = keyword;
        }

        var newUrl = QueryHelpers.AddQueryString("shippingCost", queryParameters!);

        NavigationManager.NavigateTo(newUrl, forceLoad: false);

        await LoadListShippingCosts();
    }
}