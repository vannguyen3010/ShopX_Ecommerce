@page "/quan-ly-banner"

@inject BannerProductServices _bannerProductServices

@rendermode InteractiveServer

<div class="page-body">
    <!-- All User Table Start -->
    <div class="container-fluid">
        <div class="row">
            <div class="col-sm-12">
                <div class="card card-table">
                    <div class="card-body">
                        <div class="title-header option-title">
                            <h5>Quản lý Banner</h5>
                            <form class="d-inline-flex">
                                <a onclick="window.location.href='/them-banner'"
                                   class="align-items-center btn btn-theme d-flex">
                                    <i data-feather="plus-square"></i>Thêm banner
                                </a>
                            </form>
                        </div>
                        <div class="icon-box icon-box-side icon-box-light d-flex align-items-center justify-content-between mb-5">
                            <div class="icon-box-content">
                                <select class="js-example-basic-single w-100 sort_categories search_input cursor" name="state" @onchange="OnPositionChanged">
                                    <option value="">Tất cả</option>
                                    <option value="0">Product</option>
                                    <option value="1">Popup</option>
                                </select>
                            </div>
                        </div>
                        <div class="table-responsive category-table">
                            <div>
                                <table class="table all-package theme-table" id="table_id">
                                    <thead>
                                        <tr>
                                            <th>Ảnh</th>
                                            <th>Tiêu đề</th>
                                            <th>Ngày</th>
                                            <th>Mục</th>
                                            <th>Trạng thái</th>
                                            <th>Mô tả</th>
                                            <th>Hành động</th>
                                        </tr>
                                    </thead>

                                    <tbody>
                                        @if (isLoading)
                                        {
                                            <tr>
                                                <td colspan="7">
                                                    <div class="loading-container">
                                                        <div class="loading"></div>
                                                    </div>
                                                </td>
                                            </tr>
                                        }
                                        else if (listBanner != null && listBanner.Any())
                                        {
                                            @foreach (var item in listBanner)
                                            {

                                                <tr>

                                                    <td class="@(item.Status ? "" : "table_row_disabled")">
                                                        <div class="table-image">
                                                            <img src="@(string.IsNullOrEmpty(item.FilePath) ? "/img_dev/banner.png" : item.FilePath)" class="img-fluid"
                                                                 alt="image" onerror="this.onerror=null;this.src='/Img_Dev/banner.png';">
                                                        </div>
                                                    </td>

                                                    <td class="@(item.Status ? "" : "table_row_disabled")">@item.Title</td>

                                                    <td class="@(item.Status ? "" : "table_row_disabled")">@item.CreatedAt.ToString("dd-MM-yyyy")</td>

                                                    @if (item.Position == 0)
                                                    {
                                                        <td class="@(item.Status ? "" : "table_row_disabled") status-close">

                                                            <span>
                                                                Product
                                                            </span>
                                                        </td>
                                                    }
                                                    else
                                                    {
                                                        <td class="@(item.Status ? "" : "table_row_disabled") status-danger">

                                                            <span>
                                                                Popup
                                                            </span>
                                                        </td>
                                                    }

                                                    @if (item.Status == true)
                                                    {
                                                        <td>
                                                            <label class="switch">
                                                                <input type="checkbox" checked @onchange="@((ChangeEventArgs e) => UpdateStatus(item.Id, false))">
                                                                <span class="slider round"></span>
                                                            </label>
                                                        </td>
                                                    }
                                                    else
                                                    {
                                                        <td>
                                                            <label class="switch">
                                                                <input type="checkbox" @onchange="@((ChangeEventArgs e) => UpdateStatus(item.Id, true))">
                                                                <span class="slider round"></span>
                                                            </label>
                                                        </td>
                                                    }

                                                    <td class="@(item.Status ? "" : "table_row_disabled")">@item.Desc</td>

                                                    <td class="@(item.Status ? "" : "table_row_disabled")">
                                                        <ul>
                                                            <li>
                                                                <a href="javascript:void(0)" @onclick="() => GetBannerProductPopupByid(item.Id)">
                                                                    <i class="ri-pencil-line"></i>
                                                                </a>
                                                            </li>

                                                            <li>
                                                                @if (IsLoading(item.Id))
                                                                {
                                                                    <IconLoad></IconLoad>
                                                                }
                                                                else
                                                                {

                                                                    <a href="javascript:void(0)" data-bs-toggle="modal"
                                                                       data-bs-target="#exampleModalToggle" @onclick="() => DeleteBanner(item.Id)">
                                                                        <i class="ri-delete-bin-line"></i>
                                                                    </a>
                                                                }
                                                            </li>
                                                        </ul>
                                                    </td>
                                                </tr>
                                            }
                                        }
                                        else
                                        {
                                            <tr>
                                                <td colspan="7">
                                                    <div class="d-flex justify-content-center">
                                                        <img src="img_dev/datanull.png" class="img-fluid" alt="Image" />
                                                    </div>
                                                    <span>Không có bài viết nào !</span>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code{
    private IEnumerable<BannerProductDto> listBanner;

    private bool isLoading = true;
    private Dictionary<Guid, bool> LoadingStates = new Dictionary<Guid, bool>();

    protected override async Task OnInitializedAsync()
    {
        await LoadListBanner();
    }

    private async Task LoadListBanner(BannerProductWithPopupPosition? position = null)
    {
        isLoading = true;

        var response = await _bannerProductServices.GetAllBannerPositionAsync(position);

        if (response != null && response.Success)
        {
            listBanner = response.Data;
        }

        await Task.Delay(1000);
        isLoading = false;
    }

    private async Task OnPositionChanged(ChangeEventArgs e)
    {
        if (int.TryParse(e.Value.ToString(), out int position))
        {
            await LoadListBanner((BannerProductWithPopupPosition)position);
        }
        else
        {
            await LoadListBanner(null);
        }
    }

    private async Task UpdateStatus(Guid id, bool status)

    {
        bool isSuccess = await _bannerProductServices.UpdateBannerProductStatusAsync(id, status);

        if (isSuccess)
        {
            await LoadListBanner();
        }
    }

    private async Task DeleteBanner(Guid id)
    {
        LoadingStates[id] = true;

        bool isDeleted = await _bannerProductServices.DeleteBannerProductAsync(id);

        if (isDeleted)
        {
            await LoadListBanner();
        }

        await Task.Delay(1000);
        LoadingStates[id] = false;
    }

    private bool IsLoading(Guid id)
    {
        return LoadingStates.ContainsKey(id) && LoadingStates[id];
    }

    private async Task GetBannerProductPopupByid(Guid id)
    {
        NavigationManager.NavigateTo($"/cap-nhat-banner-product-popup/{id}", forceLoad: true);
    }
}