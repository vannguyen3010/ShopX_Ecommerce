@page "/account/login"
@using Admin_Wolmart.UI.Helpers

@inject AccountServices _accountServices

@layout _P_AuthenticationLayout

@rendermode InteractiveServer
<section class="log-in-section section-b-space">
    <a href="" class="logo-login"><img src="assets/images/logo/1.png" class="img-fluid"></a>
    <div class="container w-100">
        <div class="row">

            <div class="col-xl-5 col-lg-6 me-auto">
                <div class="log-in-box">
                    <div class="log-in-title">
                        <h3>Welcome To Fastkart</h3>
                        <h4>Log In Your Account</h4>
                    </div>

                    <div class="input-box">
                        <EditForm class="row g-4" Enhance Model="User" OnValidSubmit="HandleLogin" FormName="form-login">
                            <DataAnnotationsValidator />
                            <div class="col-12">
                                <div class="form-floating theme-form-floating log-in-form">
                                    <InputText type="email" class="form-control" @bind-Value="User.Email" placeholder="Email Address" />
                                    <ValidationMessage class="text-danger" For="@(() => User.Email)" />
                                </div>
                            </div>

                            <div class="col-12">
                                <div class="form-floating theme-form-floating log-in-form">
                                    <InputText type="password" class="form-control" @bind-Value="User.Password"
                                               placeholder="Password" />
                                    <ValidationMessage class="text-danger" For="@(() => User.Password)" />
                                </div>
                            </div>

                            <div class="col-12">
                                <div class="forgot-box">
                                    <a href="forgot.html" class="forgot-password">Forgot Password?</a>
                                </div>
                            </div>

                            <div class="col-12">
                                <button class="btn btn-animation w-100 justify-content-center" type="submit">
                                    Đăng nhập
                                </button>
                            </div>
                        </EditForm>
                    </div>

                </div>
            </div>
        </div>
    </div>
</section>



@code {
    [CascadingParameter]
    public Task<AuthenticationState> AuthenticationState { get; set; }

    public LoginDto User = new();
    public bool ShowLoadingButton { get; set; } = false;
    private bool _initialized = false;


    protected async override Task OnInitializedAsync()
    {
        await CheckUserAuthentication();
    }

    public async Task HandleLogin()
    {
        // ShowLoadingButton = true;
        var result = await _accountServices.LoginAsync(User);

        if (result.IsAuthSuccessful)
        {
            var customAuthStateProvider = (CustomAuthenticationStateProvider)AuthStateProvider;
            await customAuthStateProvider.UpdateAuthenticationState(new AuthResponseDto()
            {
                Token = result.Token,
                RefreshTokens = result.RefreshTokens
            });

            NavigationManager.NavigateTo("/dashboard", forceLoad: true);
        }
        // ShowLoadingButton = false;
    }
    private async Task CheckUserAuthentication()
    {
        if (!_initialized) return;

        if (AuthenticationState == null) return;

        var user = (await AuthenticationState).User;
        bool isUserAuthenticated = user.Identity!.IsAuthenticated;
        if (isUserAuthenticated)
            NavigationManager.NavigateTo("/dashboard");
    }

}